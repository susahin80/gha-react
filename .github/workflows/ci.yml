name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_AUTH_TOKEN }}
      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Echo Cache hit
        if: ${{ steps.cache.outputs.cache-hit == 'true' }}
        run: |
          echo "CACHE HIT"
      - name: install dependencies
        run: npm ci
      - name: check code format
        run: npm run format:check
      - name: run tests
        run: npm test -- --coverage
        env:
          CI: true
      - name: upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: build project
        if: github.event_name == 'push'
        run: npm run build
      - name: upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: ZIP assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: install surge
        run: npm i -g surge
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
      - name: deploy to staging
        if: github.event_name == 'push' &&  github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain utter-picture.surge.sh
      - name: deploy to prod
        if: github.event_name == 'push' &&  github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain sassy-boot.surge.sh
      - name: Upload coverage reports to Codecov
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Open Issue if workflow fails
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'
